# Script that packages a single header into a cdep package

groupId=com.github.jomof
artifactId=tinydir
version=${TRAVIS_TAG:-0.0.0}

mkdir -p zip/include/${artifactId}
mkdir package/
cp ${artifactId}.h zip/include/${artifactId}/
pushd zip
zip -r ../package/${artifactId}.zip .
popd

headerzipsha=$(shasum -a 256 package/${artifactId}.zip | awk '{print $1}')
headerzipsize=$(stat --printf="%s" package/${artifactId}.zip)

manifest="package/cdep-manifest.yml"
printf "%s\r\n" "coordinate:" > ${manifest}
printf "%s\r\n" "  groupId: ${groupId}" >> ${manifest}
printf "%s\r\n" "  artifactId: ${artifactId}" >> ${manifest}
printf "%s\r\n" "  version: ${version}" >> ${manifest}
printf "%s\r\n" "archive:" >> ${manifest} 
printf "%s\r\n" "  file: ${artifactId}.zip" >> ${manifest} 
printf "%s\r\n" "  sha256: ${headerzipsha}" >> ${manifest} 
printf "%s\r\n" "  size: ${headerzipsize}" >> ${manifest} 
printf "%s\r\n" "example: |" >> ${manifest} 
printf "%s\r\n" "  #include <stdio.h>" >> ${manifest} 
printf "%s\r\n" "  #include <tinydir/tinydir.h>" >> ${manifest} 
printf "%s\r\n" "  int main(void) {" >> ${manifest} 
printf "%s\r\n" "    tinydir_dir dir;" >> ${manifest} 
printf "%s\r\n" "    if (tinydir_open(&dir, \".\") == -1) {" >> ${manifest} 
printf "%s\r\n" "      perror(\"Error opening file\");" >> ${manifest} 
printf "%s\r\n" "      goto bail;" >> ${manifest} 
printf "%s\r\n" "    }" >> ${manifest} 
printf "%s\r\n" "    while (dir.has_next) {" >> ${manifest} 
printf "%s\r\n" "      tinydir_file file;" >> ${manifest} 
printf "%s\r\n" "      if (tinydir_readfile(&dir, &file) == -1)	{" >> ${manifest} 
printf "%s\r\n" "        perror(\"Error getting file\");" >> ${manifest} 
printf "%s\r\n" "        goto bail;" >> ${manifest} 
printf "%s\r\n" "      }" >> ${manifest} 
printf "%s\r\n" "      printf(\"%s\", file.name);" >> ${manifest} 
printf "%s\r\n" "      if (file.is_dir)	{" >> ${manifest} 
printf "%s\r\n" "        printf(\"/\");" >> ${manifest} 
printf "%s\r\n" "      }" >> ${manifest} 
printf "%s\r\n" "      printf(\"\n\");" >> ${manifest} 
printf "%s\r\n" "      if (tinydir_next(&dir) == -1) {" >> ${manifest} 
printf "%s\r\n" "        perror(\"Error getting next file\");" >> ${manifest} 
printf "%s\r\n" "        goto bail;" >> ${manifest} 
printf "%s\r\n" "      }" >> ${manifest} 
printf "%s\r\n" "    }" >> ${manifest} 
printf "%s\r\n" "    bail:" >> ${manifest} 
printf "%s\r\n" "      tinydir_close(&dir);" >> ${manifest} 
printf "%s\r\n" "      return 0;" >> ${manifest} 
printf "%s\r\n" "    }" >> ${manifest} 


 
